<UserControl x:Class="FlexiWallUI.Controls.ActionPointFrame"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:FlexiWallUI.Controls"
             xmlns:viewModels="clr-namespace:FlexiWallUI.ViewModels"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300" d:DataContext="{d:DesignData viewModels:ActionPropertiesViewModel}">
    <Border x:Name="ManipulationBorder" BorderBrush="{DynamicResource SpecialColorBrush}"
            MouseDown="StartDrag" MouseUp="StopDrag" MouseEnter="EnterDrag" MouseLeave="LeaveDrag" MouseMove="Drag" MouseWheel="Scale">
        <Border.Style>
            <Style>
                <Setter Property="Border.BorderThickness" Value="1"/>
                <Setter Property="Border.Visibility" Value="Visible"/>
                <Style.Triggers>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding ElementName=ManipulationBorder, Path=IsMouseOver}" Value="False"/>
                            <Condition Binding="{Binding IsVisible}" Value="False"/>
                            <Condition Binding="{Binding IsSelectionLocked}" Value="False"/>
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Border.BorderThickness" Value="0"/>
                    </MultiDataTrigger>
                </Style.Triggers>
            </Style>
        </Border.Style>
        <Grid Background="#00FFFFFF" Width="{Binding Diameter}" Height="{Binding Diameter}">
            <Grid.RowDefinitions>
                <RowDefinition Height="10"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>


            <Rectangle Fill="{DynamicResource SpecialColorBrush}" Grid.Row="0" x:Name="TitleBar">
                <Rectangle.Style>
                    <Style>
                        <Setter Property="Rectangle.Visibility" Value="Visible"/>
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding ElementName=ManipulationBorder, Path=IsMouseOver}" Value="False"/>
                                    <Condition Binding="{Binding IsVisible}" Value="False"/>
                                    <Condition Binding="{Binding IsSelectionLocked}" Value="False"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Rectangle.Visibility" Value="Hidden"/>
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </Rectangle.Style>
            </Rectangle>
            <StackPanel Grid.Row="0" Background="{DynamicResource SpecialColorBrush}" Orientation="Horizontal" HorizontalAlignment="Right" x:Name="ButtonBar">
                <StackPanel.Style>
                    <Style>
                        <Setter Property="StackPanel.Visibility" Value="Visible"/>
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding ElementName=ManipulationBorder, Path=IsMouseOver}" Value="False"/>
                                    <Condition Binding="{Binding IsVisible}" Value="False"/>
                                    <Condition Binding="{Binding IsSelectionLocked}" Value="False"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Rectangle.Visibility" Value="Hidden"/>
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </StackPanel.Style>
                <ToggleButton Style="{DynamicResource TransparentToggleButton}" IsChecked="{Binding IsSelectionLocked, Mode=OneWay}" Padding="0" Width="10" Height="10" Margin="0" Command="{Binding LockSelectionCmd}">
                    <Ellipse StrokeThickness="1" Stroke="{DynamicResource HighlightColorBrush}" Width="8" Height="8">
                        <Ellipse.Style>
                            <Style>
                                <Setter Property="Ellipse.Fill" Value="#00FFFFFF"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsSelectionLocked}" Value="True">
                                        <Setter Property="Ellipse.Fill" Value="{DynamicResource HighlightColorBrush}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Ellipse.Style>
                    </Ellipse>
                </ToggleButton>
                <Button Style="{DynamicResource TransparentButton}" Command="{Binding DeleteCmd}" CommandParameter="{Binding}" Padding="0" Width="10" Height="10" FontSize="7" Margin="0" >X</Button>
            </StackPanel>
        </Grid>
    </Border>
</UserControl>
